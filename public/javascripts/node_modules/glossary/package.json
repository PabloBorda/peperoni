{
  "name": "glossary",
  "description": "Term extraction module",
  "version": "0.1.1",
  "author": {
    "name": "Heather Arthur",
    "email": "fayearthur@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/harthur/glossary.git"
  },
  "main": "./glossary",
  "license": "ISC",
  "dependencies": {
    "natural": ">=0.0.28",
    "pos": "0.1.x",
    "underscore": "1.1.x"
  },
  "keywords": [
    "term extraction",
    "keyword",
    "tag",
    "auto tag"
  ],
  "readme": "# glossary\r\n\r\nglossary is a JavaScript module that extracts keywords from text (aka \"term extraction\" or \"auto tagging\"). It takes a string of text and returns an array of terms that are relevant to the content:\r\n\r\n```javascript\r\nvar glossary = require(\"glossary\");\r\n\r\nvar keywords = glossary.extract(\"Her cake shop is the best in the business\");\r\n\r\nconsole.log(keywords)  // [\"cake\", \"shop\", \"cake shop\", \"business\"]\r\n```\r\n\r\n`glossary` is standalone and uses part-of-speech analysis to extract the relevant terms.\r\n\r\n# install\r\n\r\nFor [node](http://nodejs.org) with [npm](http://npmjs.org):\r\n\r\n```bash\r\nnpm install glossary\r\n```\r\n\r\n# API\r\n\r\n#### blacklisting\r\n\r\nUse `blacklist` to remove unwanted terms from any extraction:\r\n\r\n```javascript\r\nvar glossary = require(\"glossary\")({\r\n   blacklist: [\"library\", \"script\", \"api\", \"function\"]\r\n});\r\n\r\nvar keywords = glossary.extract(\"JavaScript color conversion library\");\r\n\r\nconsole.log(keywords); // [\"color\", \"conversion\"]\r\n```\r\n\r\n#### minimum frequency\r\n\r\nUse `minFreq` to limit the terms to only those that occur with a certain frequency:\r\n\r\n```javascript\r\nvar glossary = require(\"glossary\")({ minFreq: 2 });\r\n\r\nvar keywords = glossary.extract(\"Kasey's pears are the best pears in Canada\");\r\n\r\nconsole.log(keywords); // [\"pears\"]\r\n```\r\n\r\n#### sub-terms\r\n\r\nUse `collapse` to remove terms that are sub-terms of other terms:\r\n\r\n```javascript\r\nvar glossary = require(\"glossary\")({ collapse: true });\r\n\r\nvar keywords = glossary.extract(\"The Middle East crisis is getting worse\");\r\n\r\nconsole.log(keywords); // [\"Middle East crisis\"]\r\n```\r\n\r\n#### verbose output\r\n\r\nUse `verbose` to also get the count of each term:\r\n\r\n```javascript\r\nvar glossary = require(\"glossary\")({ verbose: true });\r\n\r\nvar keywords = glossary.extract(\"The pears from the farm are good\");\r\n\r\nconsole.log(keywords); // [ { word: 'pears', count: 1 }, { word: 'farm', count: 1 } ]\r\n```\r\n\r\n# propers\r\n\r\n`glossary` Uses [jspos](http://code.google.com/p/jspos/) for POS tagging. It's inspired by the python module [topia.termextract](http://pypi.python.org/pypi/topia.termextract/).\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "gitHead": "2e7b6343af6bc9b6cb2862c651ab728f36b603d2",
  "bugs": {
    "url": "https://github.com/harthur/glossary/issues"
  },
  "homepage": "https://github.com/harthur/glossary#readme",
  "_id": "glossary@0.1.1",
  "scripts": {},
  "_shasum": "09f3654b5472d51a0969e7d10c33772e8ab0e034",
  "_from": "glossary",
  "_resolved": "file:glossary"
}
